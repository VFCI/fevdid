[{"path":"https://vfci.github.io/fevdid/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 fevdid authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://vfci.github.io/fevdid/articles/derivations.html","id":"structural-vector-autoregression-svar","dir":"Articles","previous_headings":"","what":"Structural Vector Autoregression (SVAR)","title":"Derivations for Max Share Identification Method","text":"SVAR(p) model pp lags, vector variables yty_t, assumes data generating process accurately represented , 1 B0yt=B1yt−1+...+Bpyt−p+wt B_0 y_t = B_1 y_{t-1} + ... + B_p y_{t-p} + w_t wtw_t mean zero structural shocks, serially uncorrelated diagonal covariance matrix Σw=E[wtwt]\\Sigma_w = E[w_t w_t], BiB_i matrices coefficients. Empirically, however, following AiA_i matrices coefficients vtv_t vector reduced form residuals observed, $$ y_t = \\underbrace{B_0^{-1}B_1}_{A_1} y_{t-1} + ... + \\underbrace{B_0^{-1}B_p}_{A_p} y_{t-p} + \\underbrace{B_0^{-1} w_t}_{u_t} \\\\ y_t = A_1 y_{t-1} + ... + A_p y_{t-p} + u_t $$","code":""},{"path":"https://vfci.github.io/fevdid/articles/derivations.html","id":"identification-problem","dir":"Articles","previous_headings":"Structural Vector Autoregression (SVAR)","what":"Identification Problem","title":"Derivations for Max Share Identification Method","text":"observe reduced form residuals, vtv_t, want structural shocks, wtw_t. ut=B0−1wt u_t = B_0^{-1} w_t point, WLOG, assume Σw=\\Sigma_w = . implies Σu=B0−1B0−1′\\Sigma_u = B_0^{-1} B_0^{-1^\\prime}. order identify structural shocks, simply need know structural impact matrix, B0B_0, equivalently, inverse B0−1B_0^{-1}.","code":""},{"path":"https://vfci.github.io/fevdid/articles/derivations.html","id":"impulse-response-functions-irf-and-forecast-errors","dir":"Articles","previous_headings":"Structural Vector Autoregression (SVAR)","what":"Impulse Response Functions (IRF) and Forecast Errors","title":"Derivations for Max Share Identification Method","text":"useful max share method show impulse response forecast error definitions","code":""},{"path":"https://vfci.github.io/fevdid/articles/derivations.html","id":"irfs","dir":"Articles","previous_headings":"Structural Vector Autoregression (SVAR) > Impulse Response Functions (IRF) and Forecast Errors","what":"IRFs","title":"Derivations for Max Share Identification Method","text":"IRFs give responses variable yty_t horizon ii one-time impulse time tt structural shock, wtw_t, Θi≡∂yt+∂wti=0,1,2,...,H \\Theta_i \\equiv \\frac{\\partial y_{t+}}{\\partial w_t} \\hspace{1cm} = 0, 1, 2, ..., H IRF response variable kk impulse structural shock jj horizon ii denoted, θkj,≡∂yk,t+∂wjt \\theta_{kj,} \\equiv \\frac{\\partial y_{k, t+}}{\\partial w_{jt}} Let impulse responses reduced form residuals similarily denoted , $$ \\Phi_i \\equiv \\frac{\\partial y_{t+}}{\\partial u_t} \\hspace{1cm} = 0, 1, 2, ..., H \\\\ \\phi_{kj,} \\equiv \\frac{\\partial y_{k, t+}}{\\partial u_{jt}} $$ can map two using B0B_0 impact matrix, $$ \\Theta_i = \\Phi_i B_0^{-1} \\\\ \\theta_{kj,} = [\\Phi_i B_0^{-1}]_{kj} $$ Letting Φk*,\\Phi_{k*,} denote kkth row Φi\\Phi_i B0,*j−1B_{0,*j}^{-1} denote jjth column B0−1B_0^{-1}, θkj,=Φk*,iB0,*j−1 \\theta_{kj,} = \\Phi_{k*,} B_{0,*j}^{-1}","code":""},{"path":"https://vfci.github.io/fevdid/articles/derivations.html","id":"forecast-errors","dir":"Articles","previous_headings":"Structural Vector Autoregression (SVAR) > Impulse Response Functions (IRF) and Forecast Errors","what":"Forecast Errors","title":"Derivations for Max Share Identification Method","text":"Let Ft+hF_{t+h} denote hh-step ahead forecast errors, Ft+h≡yt+h−yt+h|t F_{t+h} \\equiv y_{t+h} - y_{t+h|t} , VAR process, can denoted terms redcued form IRFs, Φi\\Phi_i, Ft+h=∑=0h−1Φiut+h−=∑=0h−1ΦiB0−1wt+h−F_{t+h} = \\sum_{=0}^{h-1} \\Phi_i u_{t+h-} = \\sum_{=0}^{h-1} \\Phi_i B_0^{-1} w_{t+h-}","code":""},{"path":"https://vfci.github.io/fevdid/articles/derivations.html","id":"forecast-error-variance-fev","dir":"Articles","previous_headings":"Structural Vector Autoregression (SVAR) > Impulse Response Functions (IRF) and Forecast Errors","what":"Forecast Error Variance (FEV)","title":"Derivations for Max Share Identification Method","text":"FEV, also known predicted mean squared error, calculated $$ FEV_h \\equiv E[F_{t+h}F_{t+h}^\\prime] \\\\ = \\sum_{=0}^{h-1} \\Phi_i \\Sigma_u \\Phi_i^\\prime = \\sum_{=0}^{h-1} \\Phi_i B_0^{-1} B_0^{-1^\\prime} \\Phi_i^\\prime = \\sum_{=0}^{h-1} [\\Phi_i B_0^{-1}] [\\Phi_i B_0^{-1}]^\\prime $$ FEV impulse jj contribution variable kk denoted , $$ FEV_{kj,h} =  \\sum_{=0}^{h-1}  [\\Phi_i B_0^{-1}]_{jk} [\\Phi_i B_0^{-1}]_{jk}^\\prime \\\\ = \\sum_{=0}^{h-1} \\Phi_{k*,} B_{0,*j}^{-1} [\\Phi_{k*,} B_{0,*j}^{-1}]^\\prime \\\\ = \\sum_{=0}^{h-1} \\Phi_{k*,} B_{0,*j}^{-1} B_{0,*j}^{-1\\prime} \\Phi_{k*,}^\\prime $$ Since Φk*,iB0,*j−1\\Phi_{k*,} B_{0,*j}^{-1} single number (matrix), can rearrange $$ = \\sum_{=0}^{h-1} B_{0,*j}^{-1\\prime} \\Phi_{k*,}^\\prime \\Phi_{k*,} B_{0,*j}^{-1} \\\\ = B_{0,*j}^{-1\\prime} \\sum_{=0}^{h-1}\\left[\\Phi_{k*,}^\\prime \\Phi_{k*,}\\right] B_{0,*j}^{-1} $$","code":""},{"path":"https://vfci.github.io/fevdid/articles/derivations.html","id":"max-share-identification-method---time-domain","dir":"Articles","previous_headings":"","what":"Max Share Identification Method - Time Domain","title":"Derivations for Max Share Identification Method","text":"Pick structural shock jj choosing weights B0,*j−1B_{0,*j}^{-1} maximize forecast error variance horizon [h−,h+][h^-, h^+] Solve maximization problem: maxB0,*j−1∑h−h+FEVkj,h \\max_{B_{0,*j}^{-1}} \\sum_{h^-}^{h^+} \\text{FEV}_{kj,h} equivalent solving maxB0,*j−1B0,*j−1′∑h−h+∑=0h−1[Φk*,′Φk*,]B0,*j−1 \\max_{B_{0,*j}^{-1}} B_{0,*j}^{-1\\prime} \\sum_{h^-}^{h^+} \\sum_{=0}^{h-1}\\left[\\Phi_{k*,}^\\prime \\Phi_{k*,}\\right] B_{0,*j}^{-1} maximized B0,*j−1B_{0,*j}^{-1} eigenvector associated largest eigenvalue matrix ∑h−h+∑=0h−1[Φk*,′Φk*,]\\sum_{h^-}^{h^+} \\sum_{=0}^{h-1}\\left[\\Phi_{k*,}^\\prime \\Phi_{k*,}\\right]. ’s piece missing , B0,*j−1B0,*j−1B_{0,*j}^{-1}B_{0,*j}^{-1} can decomposed Choleskey matrix rotation matrix Q, maximization problem becomes picking column Q.","code":""},{"path":"https://vfci.github.io/fevdid/articles/derivations.html","id":"max-share-identification-method---frequency-domain","dir":"Articles","previous_headings":"","what":"Max Share Identification Method - Frequency Domain","title":"Derivations for Max Share Identification Method","text":"Pick structural shock jj choosing weights B0,*j−1B_{0,*j}^{-1} maximize forecast error variance frequencies [ω−,ω+][\\omega^-, \\omega^+] Solve maximization problem: maxB0,*j−1∫ω−ω+FEVkj,ωdω \\max_{B_{0,*j}^{-1}} \\int_{\\omega^-}^{\\omega^+} \\text{FEV}_{kj,\\omega} d\\omega equivalent solving maxB0,*j−1B0,*j−1′∫ω−ω+Φk*,ω′Φk*,ωdωB0,*j−1 \\max_{B_{0,*j}^{-1}} B_{0,*j}^{-1\\prime} \\int_{\\omega^-}^{\\omega^+} \\Phi_{k*,\\omega}^\\prime \\Phi_{k*,\\omega} \\ d\\omega \\ B_{0,*j}^{-1} Φk*,ω\\Phi_{k*,\\omega} impulse response function specific frequency ω\\omega. next sections show calculate value.","code":""},{"path":"https://vfci.github.io/fevdid/articles/derivations.html","id":"solving-for-irf-in-frequency-space","dir":"Articles","previous_headings":"Max Share Identification Method - Frequency Domain","what":"Solving for IRF in frequency space","title":"Derivations for Max Share Identification Method","text":"Note: One approximate solution calculate time domain IRF long horizon (say 1000 periods), take fourier transformation, keep frequencies want, square contributions, maximize real value portion.","code":""},{"path":"https://vfci.github.io/fevdid/articles/derivations.html","id":"representing-varp-as-a-var1","dir":"Articles","previous_headings":"Max Share Identification Method - Frequency Domain > Solving for IRF in frequency space","what":"Representing VAR(p) as a VAR(1)","title":"Derivations for Max Share Identification Method","text":"First ’s easiest work VAR(1) process instead VAR(p) 2 . . . Yt=υ+AYt−1+Ut Y_t = \\upsilon + Y_{t-1} + U_t . . .","code":""},{"path":"https://vfci.github.io/fevdid/articles/derivations.html","id":"mainfty-representation","dir":"Articles","previous_headings":"Max Share Identification Method - Frequency Domain > Solving for IRF in frequency space","what":"MA(∞\\infty) Representation","title":"Derivations for Max Share Identification Method","text":"Next, represent moving average. 3 . . . yt=C(L)−1υ+C(L)−1ut y_t = C(L)^{-1} \\upsilon + C(L)^{-1} u_t C(L)−1≡∑=0∞ϕiLiC(L)^{-1} \\equiv \\sum_{=0}^{\\infty} \\phi_i L^. . .","code":""},{"path":"https://vfci.github.io/fevdid/articles/derivations.html","id":"calculating-the-spectrum-for-an-mainfty","dir":"Articles","previous_headings":"Max Share Identification Method - Frequency Domain > Solving for IRF in frequency space","what":"Calculating the spectrum for an MA(∞\\infty)","title":"Derivations for Max Share Identification Method","text":"Now, can calculate spectrum using 4 . . . sY(ω)=12πσ2C(e−iω)C(e−iω) s_Y(\\omega) = \\frac{1}{2\\pi} \\sigma^2 C(e^{-\\omega})C(e^{-\\omega}) key end getting , C(e−iω)=(−A1e−iω)−1 C(e^{-\\omega}) = (- A_1 e^{-\\omega})^{-1} essentially solving entire path IRFs inverting, making Fourier transformation time. . . .","code":""},{"path":"https://vfci.github.io/fevdid/articles/derivations.html","id":"resources","dir":"Articles","previous_headings":"","what":"Resources","title":"Derivations for Max Share Identification Method","text":"Hamilton, James D. Time Series Analsysis. Chapter 6: Spectral Analysis. Pg 152 - 172. particular, page 154 deriving population spectrum MA(infinity) process. Kilian, Lutz Lutekepohl Helmut. Structural Vector Autoregressive Analysis. (2017). particular, Chapter 1: Introduction SVAR notation. Chapter 2: Vector Autoregressive Models. Pg 19 - . Specifically, page 25 representing VAR(p) process VAR(1) process. Angeletos, George-Marios, Fabrice Collard, Harris Dellas. (2020). “Businsess Cycle Anatomy”. American Economic Review, 110(10): 3030 - 3070. particular, pages 3036 - 3037 derivations.","code":""},{"path":"https://vfci.github.io/fevdid/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew DeHaven. Author, maintainer.","code":""},{"path":"https://vfci.github.io/fevdid/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"DeHaven M (2024). fevdid: Main Shock Forecast Error Variance Identification. R package version 0.0.0.9000, https://vfci.github.io/fevdid/.","code":"@Manual{,   title = {fevdid: Main Shock Forecast Error Variance Identification},   author = {Matthew DeHaven},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://vfci.github.io/fevdid/}, }"},{"path":"https://vfci.github.io/fevdid/index.html","id":"fevdid","dir":"","previous_headings":"","what":"Main Shock Forecast Error Variance Identification","title":"Main Shock Forecast Error Variance Identification","text":"R package identify structural VAR shocks using maximization explained forecast error variances. Implemented target either time domain frequency domain.","code":""},{"path":"https://vfci.github.io/fevdid/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Main Shock Forecast Error Variance Identification","text":"can install development version fevdid GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"VFCI/fevdid\")"},{"path":[]},{"path":"https://vfci.github.io/fevdid/index.html","id":"main-shock-in-the-time-domain","dir":"","previous_headings":"Usage","what":"Main Shock in the Time Domain","title":"Main Shock Forecast Error Variance Identification","text":"Example identifying main shock along time domain. target variable inflation four ten quarters . figure compares identified main shock Choleskey shock inflation, already explains variation simple 3-variable VAR. Clearly, however, contribution Main shock higher targeted time period.  Getting impulse responses identified main shock VARs handled usual irf function.  Plotting forecast variance decompositions equally straightforward (code used compare two separate fevds).","code":"require(fevdid)  ## US data on inflation (pi), output (x), and federal funds rate (i) x <- svars::USA v <- vars::VAR(x, p = 2) sv <- svars::id.chol(v, order_k = c(\"x\", \"pi\", \"i\"))  ## Find shock that maximizes forecast error variance for inflation (pi) ## from 4 to 10 quarters out mv <- id_fevdtd(v, target = \"pi\", horizon = 4:10)  ## Comparing fevds fevdsv <- vars::fevd(sv, n.ahead = 20)$pi fevdmv <- vars::fevd(mv, n.ahead = 20)$fevd |>   dplyr::filter(impulse == \"Main\" & response == \"pi\")   ## Plotting require(ggplot2) data.frame(h = 1:20, pi = fevdsv$pi, Main = fevdmv$fevd) |>   tidyr::pivot_longer(-h) |>   ggplot(aes(x = h, y = value, color = name)) +   geom_vline(xintercept = c(4, 10)) +   geom_line() irfsv <- vars::irf(sv, n.ahead = 20) irfmv <- vars::irf(mv, n.ahead = 20)  cowplot::plot_grid(plot(irfsv), plot(irfmv, impulse_as = \"cols\"), nrow = 1) fevdsv <- vars::fevd(sv, n.ahead = 20) fevdmv <- vars::fevd(mv, n.ahead = 20)  cowplot::plot_grid(plot(fevdsv), plot(fevdmv), nrow = 1)"},{"path":"https://vfci.github.io/fevdid/index.html","id":"main-shock-in-the-frequency-domain","dir":"","previous_headings":"Usage","what":"Main Shock in the Frequency Domain","title":"Main Shock Forecast Error Variance Identification","text":"Example identifying main shock along frequency domain. target variable inflation 2π32\\frac{2\\pi}{32} 2π6\\frac{2\\pi}{6}, “business cycle” frequencies. figure compares identified main shock Choleskey shock inflation, already explains variation simple 3-variable VAR. contribution Main shock higher targeted frequency period.  also generic plot function frequency domain fevds.  also easy functions looking historical shocks historical shock decompositions.","code":"require(fevdid)  ## US data on inflation (pi), output (x), and federal funds rate (i) x <- svars::USA v <- vars::VAR(x, p = 2) sv <- svars::id.chol(v, order_k = c(\"x\", \"pi\", \"i\"))  ## Find shock that maximizes forecast error variance for inflation (pi) ## in the \"business cycle\" frequencies bc_freqs <- c(2 * pi / 32, 2 * pi / 6) mfv <- id_fevdfd(v, target = \"pi\", freqs = bc_freqs)  ## Comparing fevds fevdsv <- fevdfd(sv)$fevd fevdmv <- fevdfd(mfv)$fevd  ## Plotting require(ggplot2) rbind(fevdsv, fevdmv) |>   dplyr::filter(impulse %in% c(\"Main\", \"pi\")) |>   dplyr::filter(response == \"pi\") |>   ggplot(aes(x = f, y = fevdfd, color = impulse)) +   geom_vline(xintercept = bc_freqs) +   geom_line() +   scale_x_continuous(limits = c(0, pi)) +   scale_color_hue() #> Warning: Removed 1000 rows containing missing values (`geom_line()`). fevdsv <- fevdfd(sv) fevdmv <- fevdfd(mv)  cowplot::plot_grid(plot(fevdsv), plot(fevdmv), nrow = 1) #> Warning: Removed 4500 rows containing missing values (`position_stack()`). #> Warning: Removed 9 rows containing missing values (`geom_col()`). #> Warning: Removed 4500 rows containing missing values (`position_stack()`). #> Warning: Removed 9 rows containing missing values (`geom_col()`). hs <- hs(mv) hs_cumulative <- hs(mv, cumulative = TRUE) hd <- hd(mv)  cowplot::plot_grid(   cowplot::plot_grid(plot(hs), plot(hs_cumulative), ncol = 1),   plot(hd), nrow = 1)"},{"path":"https://vfci.github.io/fevdid/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Main Shock Forecast Error Variance Identification","text":"Chapter 6: “Forecast error variance maximization” book Identification Dynamic Stuctural Shocks, Jean-Paul Renne Kenza Benhima. jrenne Github Explains codes example identifying shock maximizes forecast error variance contribution. “moves real GNP?”. Harlad Uhlig. (2003).","code":""},{"path":"https://vfci.github.io/fevdid/reference/as_statespace_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a VAR with p lags to a statespace representation with just one lag — as_statespace_var","title":"Convert a VAR with p lags to a statespace representation with just one lag — as_statespace_var","text":"Convert VAR p lags statespace representation just one lag","code":""},{"path":"https://vfci.github.io/fevdid/reference/as_statespace_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a VAR with p lags to a statespace representation with just one lag — as_statespace_var","text":"","code":"as_statespace_var(betas, sigma)"},{"path":"https://vfci.github.io/fevdid/reference/as_statespace_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a VAR with p lags to a statespace representation with just one lag — as_statespace_var","text":"betas matrix coefficients VAR. constant coefficient first column included. Dimensions k x (1 + k * p), k x (k x p) constant. sigma matrix var-cov residuals. k x k dimension.","code":""},{"path":"https://vfci.github.io/fevdid/reference/as_statespace_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a VAR with p lags to a statespace representation with just one lag — as_statespace_var","text":"matrix coefficients VAR 1 representation","code":""},{"path":"https://vfci.github.io/fevdid/reference/bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify the main shock by targetting the forecast error variance contribution in the frequency domain. — bootstrap","title":"Identify the main shock by targetting the forecast error variance contribution in the frequency domain. — bootstrap","text":"Identify main shock targetting forecast error variance contribution frequency domain.","code":""},{"path":"https://vfci.github.io/fevdid/reference/bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify the main shock by targetting the forecast error variance contribution in the frequency domain. — bootstrap","text":"","code":"bootstrap(   var,   id_method = NULL,   nboot = 500,   n_ahead = 20,   design = \"recursive\",   method = \"resample\",   wild_distr = \"gaussian\",   bias_adjust = FALSE,   lower_pctl = 0.16,   upper_pctl = 0.84,   ... )"},{"path":"https://vfci.github.io/fevdid/reference/bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify the main shock by targetting the forecast error variance contribution in the frequency domain. — bootstrap","text":"var VAR bootstrap id_method function identifies Structural VAR nboot number bootstrap iteratons n_ahead length IRF horizon design \"recursive\" \"fixed\". Controls samples data constructed. method \"resample\" \"wild\" wild_distr distribution used \"wild\" boostrap method. Either \"gaussian\", \"rademacher\", \"mammen\". bias_adjust Boolean.  Set TRUE calculate bias run bootstrap . lower_pctl lower percentile bootstraps returned summary. Defaults 0.16 (68% CI). upper_pctl upper percentile bootstraps returned summary. Defaults 0.84 (68% CI). ... Additional arguments passed function passed id_method","code":""},{"path":"https://vfci.github.io/fevdid/reference/bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify the main shock by targetting the forecast error variance contribution in the frequency domain. — bootstrap","text":"list bootstrapped VARs IRFs","code":""},{"path":"https://vfci.github.io/fevdid/reference/bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify the main shock by targetting the forecast error variance contribution in the frequency domain. — bootstrap","text":"","code":"x <- svars::USA v <- vars::VAR(x, p = 2) mvar <- id_fevdtd(v, \"pi\", 4:10) bmvar <- bootstrap(mvar, id_fevdtd, target = \"pi\", horizon},{"path":"https://vfci.github.io/fevdid/reference/fe.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the historical forecast error for a VAR out to a specified horizon — fe","title":"Calculate the historical forecast error for a VAR out to a specified horizon — fe","text":"Calculate historical forecast error VAR specified horizon","code":""},{"path":"https://vfci.github.io/fevdid/reference/fe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the historical forecast error for a VAR out to a specified horizon — fe","text":"","code":"fe(var, horizon = 1)"},{"path":"https://vfci.github.io/fevdid/reference/fe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the historical forecast error for a VAR out to a specified horizon — fe","text":"var vars::VAR svars object horizon number steps calculate fe","code":""},{"path":"https://vfci.github.io/fevdid/reference/fe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the historical forecast error for a VAR out to a specified horizon — fe","text":"forecast error","code":""},{"path":"https://vfci.github.io/fevdid/reference/fe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the historical forecast error for a VAR out to a specified horizon — fe","text":"","code":"x <- svars::USA v <- vars::VAR(x, p = 2) fe(v, 10) #>               [,1]        [,2]         [,3] #>   [1,]          NA          NA           NA #>   [2,]          NA          NA           NA #>   [3,]          NA          NA           NA #>   [4,]          NA          NA           NA #>   [5,]          NA          NA           NA #>   [6,]          NA          NA           NA #>   [7,]          NA          NA           NA #>   [8,]          NA          NA           NA #>   [9,]          NA          NA           NA #>  [10,]  1.75490311  0.44399724 -1.340137717 #>  [11,]  2.50252211  0.33266462 -0.844644206 #>  [12,]  3.15347249 -0.64372719 -0.478550611 #>  [13,]  2.78648353 -1.32657223 -1.005377737 #>  [14,]  2.43794475  0.43938122 -0.961628037 #>  [15,]  3.42959464 -1.28211643 -0.722802011 #>  [16,]  2.78789447 -0.02537531  1.264372032 #>  [17,]  1.77221046  1.25237802  3.046685244 #>  [18,]  0.15593811  0.99225616  3.484952979 #>  [19,] -0.44364490  0.69158080  2.044049750 #>  [20,] -0.74198056  0.29064686  0.780228083 #>  [21,] -0.56547699 -2.36693284 -0.965662945 #>  [22,] -2.23242057 -0.30338363 -2.279866277 #>  [23,] -0.60763860  0.93574366 -3.431112506 #>  [24,] -0.44719638 -0.43798093 -3.351956062 #>  [25,] -0.42696651 -1.41675803 -2.395506993 #>  [26,] -0.16741436 -2.08264620 -3.401410132 #>  [27,]  1.22082349  0.93041968 -4.816867384 #>  [28,]  2.78364119 -2.40027401 -3.365032634 #>  [29,]  3.02907315 -0.91652335 -2.792785348 #>  [30,]  3.78902924  0.56334941 -2.222805357 #>  [31,]  4.50408893  0.88199317  0.362498920 #>  [32,]  4.81244872  2.23493277  1.755594604 #>  [33,]  3.00815310  2.63206456  3.204812985 #>  [34,]  3.18043219  3.13109348  2.757319133 #>  [35,]  1.44781880  3.41170838  2.645735461 #>  [36,]  0.25426763  6.10280636  5.617557491 #>  [37,] -1.62339193  6.91717313  4.987125250 #>  [38,] -3.36914782  7.76206676  2.837683617 #>  [39,] -5.50871097  4.83569261 -0.088941235 #>  [40,] -5.17751919  0.76168973 -2.081263243 #>  [41,] -4.07133954  1.62848967 -2.039135672 #>  [42,] -2.99982704  0.76869993 -3.379527236 #>  [43,]  0.06873899 -2.00576881 -4.897403882 #>  [44,] -0.02894317 -2.11910678 -4.478224781 #>  [45,] -0.37366599 -0.45805180 -3.609058230 #>  [46,]  0.98243404  0.94643732 -5.514811655 #>  [47,]  2.44227935 -0.02734176 -6.379836872 #>  [48,]  2.92432691 -0.82343738 -5.248432975 #>  [49,]  2.53350143 -0.28288617 -2.430886988 #>  [50,]  0.74917923  4.83434421 -0.363424858 #>  [51,]  0.40013491  1.53049992 -0.816245314 #>  [52,]  2.77765306  2.97179052  0.007323847 #>  [53,]  1.81335353  2.83189044  1.706555301 #>  [54,]  2.04004920  4.93817311  3.598598508 #>  [55,]  1.60048446  3.30666681  3.707964088 #>  [56,]  1.22299326  5.13079700  2.829026411 #>  [57,]  1.06226304  3.80795436  3.486685127 #>  [58,]  0.39197464  3.29875248  6.125751457 #>  [59,] -0.11465790  3.87404331  7.815739958 #>  [60,] -1.70586480  3.28665663  4.075260094 #>  [61,] -2.44910188  4.64418891  2.121058728 #>  [62,] -1.19208740  5.64507458  6.775643670 #>  [63,]  0.37887487  4.69592583  7.831306435 #>  [64,] -0.13672079  1.46592762  7.936187789 #>  [65,]  0.43729755  1.82504425  8.503592819 #>  [66,] -0.78995454  1.52435533  3.681271073 #>  [67,] -2.86223995 -0.25578753  4.254822988 #>  [68,] -2.20297757 -0.43235171  4.594930309 #>  [69,] -2.77446758  0.88109397  1.143719042 #>  [70,] -3.97922690  0.15128475  0.842781697 #>  [71,] -3.99321501 -1.50484565  0.142175656 #>  [72,]  0.41733844 -3.41763984 -3.264276597 #>  [73,]  1.21094233 -1.37189470 -1.822949449 #>  [74,]  2.38026424 -1.04540292 -0.028995216 #>  [75,]  3.19667377  0.68438820  0.690250575 #>  [76,]  2.80905551  0.08954574  3.124751076 #>  [77,]  3.53809439  0.88174462  4.536344083 #>  [78,]  3.48556980  0.91621547  2.880719799 #>  [79,]  2.52415514  2.88002951  3.054518476 #>  [80,]  2.07765004  0.82828723  2.887135629 #>  [81,]  2.22776316  0.91311587  3.232959919 #>  [82,]  1.77343276  0.74219907  3.268863335 #>  [83,]  2.09203937 -0.41803048  2.023446039 #>  [84,]  1.26064438 -0.71845850  1.325779300 #>  [85,]  1.44263748 -1.39925502 -0.135420112 #>  [86,]  1.16501321 -0.78220506 -0.193880853 #>  [87,]  1.12488594  0.13904875 -0.058941558 #>  [88,]  0.40287405  0.19355019  1.372731648 #>  [89,]  0.64240070 -0.55560124  0.512271046 #>  [90,]  1.00597902  0.35181232  1.317820702 #>  [91,]  0.50820895  0.20719587  1.129160515 #>  [92,]  1.07174217  1.01704342  1.723609679 #>  [93,]  0.68310848  2.02431018  2.781689805 #>  [94,]  0.82984280  0.70078550  3.811905299 #>  [95,]  0.82316165  1.78991817  4.751255117 #>  [96,]  1.06213980  1.30450749  4.741216136 #>  [97,]  1.25881149 -0.25714621  3.704915563 #>  [98,]  0.87333100 -0.44317941  3.005198053 #>  [99,]  1.26214795  1.19210928  2.601453615 #> [100,]  0.91929053  0.51501912  2.112218351 #> [101,]  0.06567241  0.03423800  2.313495034 #> [102,] -1.21385524 -0.95687505  1.194300324 #> [103,] -1.88009815 -0.23785353 -0.617424629 #> [104,] -1.94839939 -1.08050584 -0.785780813 #> [105,] -1.75038503 -1.15771579 -1.519773379 #> [106,] -1.91513941 -1.85941990 -2.276678902 #> [107,] -1.97401800 -1.77960347 -2.228784834 #> [108,] -1.77411695 -0.69646235 -2.057344072 #> [109,] -1.29059396 -2.13194710 -3.491221086 #> [110,] -0.88074940 -1.32077203 -3.720571156 #> [111,] -1.46440468 -1.32550209 -3.201431476 #> [112,] -1.65940507 -0.48148868 -2.370380702 #> [113,] -1.96962877 -0.58247479 -2.225698393 #> [114,] -1.61856568 -0.74165699 -2.104681967 #> [115,] -1.46314125 -0.83695851 -1.756228805 #> [116,] -1.23656963 -0.48698488 -0.463752463 #> [117,] -1.84188772 -0.30889114  0.273493448 #> [118,] -1.45294637 -0.74228157  0.480868036 #> [119,] -2.16992398 -0.60260827  1.348568504 #> [120,] -2.57383744 -1.52718691  1.178206443 #> [121,] -2.44374818 -1.17432816  1.216866852 #> [122,] -2.46317740 -1.09101711  1.111837508 #> [123,] -2.51142176 -0.84703301  0.777942448 #> [124,] -1.71846403 -1.53877875  0.614562381 #> [125,] -1.62823622 -1.91077844  0.721040217 #> [126,] -1.19423845 -1.13471001  0.359665178 #> [127,] -1.05032207 -0.60104467  0.381592618 #> [128,] -0.13911680 -2.09338155  0.351004576 #> [129,]  0.56669866 -1.56999859  0.449845565 #> [130,]  0.53879938 -1.30096999  0.808994436 #> [131,]  0.59135289 -1.98895524  0.840999836 #> [132,]  0.71480821 -1.85303210  0.779383351 #> [133,]  1.08316106 -1.25214912  0.822096292 #> [134,]  1.59391859 -1.59257702  0.062711865 #> [135,]  1.46849344 -1.05274450  0.244494388 #> [136,]  1.53038691 -1.69053892 -0.147502033 #> [137,]  2.07465771 -1.80666052 -0.112495142 #> [138,]  2.67402685 -1.13557983  0.400667608 #> [139,]  1.91593072  0.01021754  0.789146532 #> [140,]  2.85610690 -0.74200804  1.458116015 #> [141,]  1.92505429 -0.17920691  1.974030939 #> [142,]  1.49915401 -0.65614651  1.921528096 #> [143,]  0.40336740 -0.63096769  0.564678202 #> [144,] -0.36307926 -0.61125670 -0.694115895 #> [145,] -1.58607635 -2.27969552 -1.662007869 #> [146,] -2.22957311 -2.33406045 -2.966555018 #> [147,] -2.04951351 -2.40890017 -3.609675925 #> [148,] -2.32912724 -2.47820342 -4.008143093 #> [149,] -2.25633841 -2.49223013 -4.386797717 #> [150,] -2.93256425 -2.14596091 -4.986773003 #> [151,] -3.11171447 -1.61191222 -4.804297804 #> [152,] -2.90113879 -2.63046472 -4.562156065 #> [153,] -2.05910284 -1.39050226 -4.352263381 #> [154,] -1.85304079 -1.81813644 -4.384136163 #> [155,] -2.26323736  0.36706525 -3.392192432 #> [156,] -2.58977084  0.47394182 -2.848022449 #> [157,] -2.36029385 -0.49508185 -2.678755386 #> [158,] -1.99098896 -0.23660834 -2.254741126 #> [159,] -1.36015775  0.47531337 -1.814313636 #> [160,] -1.29896061 -0.36604297 -1.287517245 #> [161,] -0.95206643  0.58296450 -0.960611237 #> [162,] -1.21423444  0.22731276 -0.029208332 #> [163,] -0.72055055 -0.34630812 -0.083154219 #> [164,] -1.10077530 -0.33484891  0.274485022 #> [165,] -1.36008144 -1.32407914  0.034307969 #> [166,] -1.09843328 -2.85815438 -0.178242867 #> [167,] -1.67624563  0.51661734  0.023037646 #> [168,] -1.38704477 -1.83554065 -0.135561748 #> [169,] -1.04858295 -3.06870852 -0.882263507 #> [170,] -1.26563616 -2.33965814 -1.118516213 #> [171,] -2.21399999 -2.17974748 -2.938396636 #> [172,] -2.16862892 -2.24458676 -3.853268668 #> [173,] -3.17379855 -1.44726692 -4.117361750"},{"path":"https://vfci.github.io/fevdid/reference/fev.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the forecast error variance for a VAR out to a specified horizon — fev","title":"Calculate the forecast error variance for a VAR out to a specified horizon — fev","text":"Calculate forecast error variance VAR specified horizon","code":""},{"path":"https://vfci.github.io/fevdid/reference/fev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the forecast error variance for a VAR out to a specified horizon — fev","text":"","code":"fev(var, n_ahead = 20)"},{"path":"https://vfci.github.io/fevdid/reference/fev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the forecast error variance for a VAR out to a specified horizon — fev","text":"var vars::VAR svars object n_ahead number steps calculate fev","code":""},{"path":"https://vfci.github.io/fevdid/reference/fev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the forecast error variance for a VAR out to a specified horizon — fev","text":"forecast error variance","code":""},{"path":"https://vfci.github.io/fevdid/reference/fev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the forecast error variance for a VAR out to a specified horizon — fev","text":"","code":"x <- svars::USA v <- vars::VAR(x, p = 2) mvar <- id_fevdtd(v, \"pi\", 4:10) fev(mvar) #> $fev #>      h impulse response         fev #> 1    1    Main        x 0.004595113 #> 2    2    Main        x 0.014520166 #> 3    3    Main        x 0.019266752 #> 4    4    Main        x 0.020059480 #> 5    5    Main        x 0.020671316 #> 6    6    Main        x 0.027137434 #> 7    7    Main        x 0.045556585 #> 8    8    Main        x 0.080890511 #> 9    9    Main        x 0.136434821 #> 10  10    Main        x 0.213670783 #> 11  11    Main        x 0.312394627 #> 12  12    Main        x 0.430984605 #> 13  13    Main        x 0.566732614 #> 14  14    Main        x 0.716186771 #> 15  15    Main        x 0.875473447 #> 16  16    Main        x 1.040580261 #> 17  17    Main        x 1.207590895 #> 18  18    Main        x 1.372868757 #> 19  19    Main        x 1.533190663 #> 20  20    Main        x 1.685834304 #> 21   1  Orth_2        x 0.508244017 #> 22   2  Orth_2        x 1.162171224 #> 23   3  Orth_2        x 1.713622950 #> 24   4  Orth_2        x 2.087258063 #> 25   5  Orth_2        x 2.308804924 #> 26   6  Orth_2        x 2.426734453 #> 27   7  Orth_2        x 2.482615172 #> 28   8  Orth_2        x 2.505097353 #> 29   9  Orth_2        x 2.511767866 #> 30  10  Orth_2        x 2.512580849 #> 31  11  Orth_2        x 2.512736780 #> 32  12  Orth_2        x 2.514658889 #> 33  13  Orth_2        x 2.519225947 #> 34  14  Orth_2        x 2.526500403 #> 35  15  Orth_2        x 2.536143487 #> 36  16  Orth_2        x 2.547645762 #> 37  17  Orth_2        x 2.560452239 #> 38  18  Orth_2        x 2.574028399 #> 39  19  Orth_2        x 2.587893458 #> 40  20  Orth_2        x 2.601635504 #> 41   1  Orth_3        x 0.007792541 #> 42   2  Orth_3        x 0.009796929 #> 43   3  Orth_3        x 0.018413679 #> 44   4  Orth_3        x 0.044445679 #> 45   5  Orth_3        x 0.093862369 #> 46   6  Orth_3        x 0.166538604 #> 47   7  Orth_3        x 0.257176998 #> 48   8  Orth_3        x 0.358516886 #> 49   9  Orth_3        x 0.463345230 #> 50  10  Orth_3        x 0.565656760 #> 51  11  Orth_3        x 0.661039172 #> 52  12  Orth_3        x 0.746643969 #> 53  13  Orth_3        x 0.820959228 #> 54  14  Orth_3        x 0.883521954 #> 55  15  Orth_3        x 0.934638030 #> 56  16  Orth_3        x 0.975138912 #> 57  17  Orth_3        x 1.006183262 #> 58  18  Orth_3        x 1.029101925 #> 59  19  Orth_3        x 1.045280926 #> 60  20  Orth_3        x 1.056076220 #> 61   1    Main       pi 1.132451873 #> 62   2    Main       pi 1.644120454 #> 63   3    Main       pi 2.219943937 #> 64   4    Main       pi 2.714314473 #> 65   5    Main       pi 3.162254522 #> 66   6    Main       pi 3.557117371 #> 67   7    Main       pi 3.901892679 #> 68   8    Main       pi 4.198292387 #> 69   9    Main       pi 4.449121494 #> 70  10    Main       pi 4.657701697 #> 71  11    Main       pi 4.827846644 #> 72  12    Main       pi 4.963689973 #> 73  13    Main       pi 5.069534363 #> 74  14    Main       pi 5.149703576 #> 75  15    Main       pi 5.208411936 #> 76  16    Main       pi 5.249654856 #> 77  17    Main       pi 5.277122943 #> 78  18    Main       pi 5.294139975 #> 79  19    Main       pi 5.303623666 #> 80  20    Main       pi 5.308067175 #> 81   1  Orth_2       pi 0.033645101 #> 82   2  Orth_2       pi 0.039663212 #> 83   3  Orth_2       pi 0.039695982 #> 84   4  Orth_2       pi 0.042832556 #> 85   5  Orth_2       pi 0.051488343 #> 86   6  Orth_2       pi 0.064847267 #> 87   7  Orth_2       pi 0.081315404 #> 88   8  Orth_2       pi 0.099147182 #> 89   9  Orth_2       pi 0.116916255 #> 90  10  Orth_2       pi 0.133593209 #> 91  11  Orth_2       pi 0.148530071 #> 92  12  Orth_2       pi 0.161391075 #> 93  13  Orth_2       pi 0.172076323 #> 94  14  Orth_2       pi 0.180652039 #> 95  15  Orth_2       pi 0.187293082 #> 96  16  Orth_2       pi 0.192238071 #> 97  17  Orth_2       pi 0.195755715 #> 98  18  Orth_2       pi 0.198120407 #> 99  19  Orth_2       pi 0.199595222 #> 100 20  Orth_2       pi 0.200420695 #> 101  1  Orth_3       pi 0.012420848 #> 102  2  Orth_3       pi 0.020919450 #> 103  3  Orth_3       pi 0.021881981 #> 104  4  Orth_3       pi 0.023702066 #> 105  5  Orth_3       pi 0.024371236 #> 106  6  Orth_3       pi 0.024479501 #> 107  7  Orth_3       pi 0.024552304 #> 108  8  Orth_3       pi 0.025333206 #> 109  9  Orth_3       pi 0.027556213 #> 110 10  Orth_3       pi 0.031823753 #> 111 11  Orth_3       pi 0.038547158 #> 112 12  Orth_3       pi 0.047924269 #> 113 13  Orth_3       pi 0.059949809 #> 114 14  Orth_3       pi 0.074443544 #> 115 15  Orth_3       pi 0.091088120 #> 116 16  Orth_3       pi 0.109469770 #> 117 17  Orth_3       pi 0.129117629 #> 118 18  Orth_3       pi 0.149538954 #> 119 19  Orth_3       pi 0.170248816 #> 120 20  Orth_3       pi 0.190793646 #> 121  1    Main        i 0.074521015 #> 122  2    Main        i 0.212582985 #> 123  3    Main        i 0.453779975 #> 124  4    Main        i 0.761150876 #> 125  5    Main        i 1.119750825 #> 126  6    Main        i 1.508162374 #> 127  7    Main        i 1.909679861 #> 128  8    Main        i 2.310058004 #> 129  9    Main        i 2.698069031 #> 130 10    Main        i 3.065125688 #> 131 11    Main        i 3.405034487 #> 132 12    Main        i 3.713693948 #> 133 13    Main        i 3.988803036 #> 134 14    Main        i 4.229575433 #> 135 15    Main        i 4.436466263 #> 136 16    Main        i 4.610914236 #> 137 17    Main        i 4.755102558 #> 138 18    Main        i 4.871741426 #> 139 19    Main        i 4.963874423 #> 140 20    Main        i 5.034710353 #> 141  1  Orth_2        i 0.121163005 #> 142  2  Orth_2        i 0.513572738 #> 143  3  Orth_2        i 0.948654515 #> 144  4  Orth_2        i 1.323993165 #> 145  5  Orth_2        i 1.615854344 #> 146  6  Orth_2        i 1.833886691 #> 147  7  Orth_2        i 1.995836785 #> 148  8  Orth_2        i 2.117534781 #> 149  9  Orth_2        i 2.210820796 #> 150 10  Orth_2        i 2.283904229 #> 151 11  Orth_2        i 2.342307067 #> 152 12  Orth_2        i 2.389714385 #> 153 13  Orth_2        i 2.428604126 #> 154 14  Orth_2        i 2.460676975 #> 155 15  Orth_2        i 2.487139339 #> 156 16  Orth_2        i 2.508885845 #> 157 17  Orth_2        i 2.526615118 #> 158 18  Orth_2        i 2.540901762 #> 159 19  Orth_2        i 2.552239821 #> 160 20  Orth_2        i 2.561067878 #> 161  1  Orth_3        i 0.648255072 #> 162  2  Orth_3        i 1.279944107 #> 163  3  Orth_3        i 1.807093155 #> 164  4  Orth_3        i 2.211015492 #> 165  5  Orth_3        i 2.498479368 #> 166  6  Orth_3        i 2.695886973 #> 167  7  Orth_3        i 2.826972035 #> 168  8  Orth_3        i 2.911203149 #> 169  9  Orth_3        i 2.963115234 #> 170 10  Orth_3        i 2.993284145 #> 171 11  Orth_3        i 3.009302927 #> 172 12  Orth_3        i 3.016601601 #> 173 13  Orth_3        i 3.019048060 #> 174 14  Orth_3        i 3.019372152 #> 175 15  Orth_3        i 3.019461485 #> 176 16  Orth_3        i 3.020570258 #> 177 17  Orth_3        i 3.023470756 #> 178 18  Orth_3        i 3.028567295 #> 179 19  Orth_3        i 3.035985201 #> 180 20  Orth_3        i 3.045642533 #>  #> attr(,\"class\") #> [1] \"fevdfev\""},{"path":"https://vfci.github.io/fevdid/reference/fevd.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast error variance decomposition. — fevd","title":"Forecast error variance decomposition. — fevd","text":"Alias function svars::fevd.svars, shock names correct.","code":""},{"path":"https://vfci.github.io/fevdid/reference/fevd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast error variance decomposition. — fevd","text":"","code":"# S3 method for class 'fevdvar' fevd(x, n.ahead = 10, ...)"},{"path":"https://vfci.github.io/fevdid/reference/fevd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast error variance decomposition. — fevd","text":"x SVAR object class \"fevdvar\" n.ahead Integer specifying steps. ... Currently used.","code":""},{"path":"https://vfci.github.io/fevdid/reference/fevd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast error variance decomposition. — fevd","text":"Matrix forecast error variance decomposition frequency domain Indexed: frequencies, variables, shocks","code":""},{"path":"https://vfci.github.io/fevdid/reference/fevd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecast error variance decomposition. — fevd","text":"","code":"x <- svars::USA v <- vars::VAR(x, p = 2) mvar <- id_fevdtd(v, \"pi\", 4:10) vars::fevd(mvar) #> $fevd #>     h impulse response       fevd #> 1   1    Main        x  0.8826034 #> 2   2    Main        x  1.2237934 #> 3   3    Main        x  1.1001379 #> 4   4    Main        x  0.9322346 #> 5   5    Main        x  0.8530098 #> 6   6    Main        x  1.0356177 #> 7   7    Main        x  1.6355792 #> 8   8    Main        x  2.7471686 #> 9   9    Main        x  4.3847893 #> 10 10    Main        x  6.4907876 #> 11  1  Orth_2        x 97.6206492 #> 12  2  Orth_2        x 97.9504986 #> 13  3  Orth_2        x 97.8484350 #> 14  4  Orth_2        x 97.0022185 #> 15  5  Orth_2        x 95.2737234 #> 16  6  Orth_2        x 92.6089428 #> 17  7  Orth_2        x 89.1312144 #> 18  8  Orth_2        x 85.0770355 #> 19  9  Orth_2        x 80.7240619 #> 20 10  Orth_2        x 76.3259651 #> 21  1  Orth_3        x  1.4967474 #> 22  2  Orth_3        x  0.8257080 #> 23  3  Orth_3        x  1.0514271 #> 24  4  Orth_3        x  2.0655469 #> 25  5  Orth_3        x  3.8732668 #> 26  6  Orth_3        x  6.3554395 #> 27  7  Orth_3        x  9.2332063 #> 28  8  Orth_3        x 12.1757958 #> 29  9  Orth_3        x 14.8911488 #> 30 10  Orth_3        x 17.1832473 #> 31  1    Main       pi 96.0911963 #> 32  2    Main       pi 96.4461459 #> 33  3    Main       pi 97.3010137 #> 34  4    Main       pi 97.6073990 #> 35  5    Main       pi 97.6572914 #> 36  6    Main       pi 97.5503048 #> 37  7    Main       pi 97.3584322 #> 38  8    Main       pi 97.1203578 #> 39  9    Main       pi 96.8549143 #> 40 10    Main       pi 96.5703319 #> 41  1  Orth_2       pi  2.8548657 #> 42  2  Orth_2       pi  2.3266932 #> 43  3  Orth_2       pi  1.7398905 #> 44  4  Orth_2       pi  1.5402690 #> 45  5  Orth_2       pi  1.5900719 #> 46  6  Orth_2       pi  1.7783700 #> 47  7  Orth_2       pi  2.0289488 #> 48  8  Orth_2       pi  2.2936015 #> 49  9  Orth_2       pi  2.5452022 #> 50 10  Orth_2       pi  2.7698512 #> 51  1  Orth_3       pi  1.0539380 #> 52  2  Orth_3       pi  1.2271609 #> 53  3  Orth_3       pi  0.9590958 #> 54  4  Orth_3       pi  0.8523320 #> 55  5  Orth_3       pi  0.7526367 #> 56  6  Orth_3       pi  0.6713253 #> 57  7  Orth_3       pi  0.6126191 #> 58  8  Orth_3       pi  0.5860407 #> 59  9  Orth_3       pi  0.5998835 #> 60 10  Orth_3       pi  0.6598169 #> 61  1    Main        i  8.8301414 #> 62  2    Main        i 10.5968298 #> 63  3    Main        i 14.1385283 #> 64  4    Main        i 17.7170068 #> 65  5    Main        i 21.3934417 #> 66  6    Main        i 24.9781111 #> 67  7    Main        i 28.3651403 #> 68  8    Main        i 31.4773435 #> 69  9    Main        i 34.2742289 #> 70 10    Main        i 36.7419120 #> 71  1  Orth_2        i 14.3568423 #> 72  2  Orth_2        i 25.6005574 #> 73  3  Orth_2        i 29.5574496 #> 74  4  Orth_2        i 30.8180633 #> 75  5  Orth_2        i 30.8717663 #> 76  6  Orth_2        i 30.3727413 #> 77  7  Orth_2        i 29.6448591 #> 78  8  Orth_2        i 28.8539810 #> 79  9  Orth_2        i 28.0845957 #> 80 10  Orth_2        i 27.3773465 #> 81  1  Orth_3        i 76.8130162 #> 82  2  Orth_3        i 63.8026128 #> 83  3  Orth_3        i 56.3040221 #> 84  4  Orth_3        i 51.4649299 #> 85  5  Orth_3        i 47.7347920 #> 86  6  Orth_3        i 44.6491476 #> 87  7  Orth_3        i 41.9900006 #> 88  8  Orth_3        i 39.6686756 #> 89  9  Orth_3        i 37.6411754 #> 90 10  Orth_3        i 35.8807415 #>  #> attr(,\"class\") #> [1] \"fevdfevd\""},{"path":"https://vfci.github.io/fevdid/reference/fevdfd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate either the forecast error variance or fevd (default) in the frequency domain. — fevdfd","title":"Calculate either the forecast error variance or fevd (default) in the frequency domain. — fevdfd","text":"Calculate either forecast error variance fevd (default) frequency domain. Method calculate fevdfd svars (id.chol) Method calculate fevdfd svars (id.chol)","code":""},{"path":"https://vfci.github.io/fevdid/reference/fevdfd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate either the forecast error variance or fevd (default) in the frequency domain. — fevdfd","text":"","code":"fevdfd(var, ...)  # S3 method for class 'svars' fevdfd(var, freqs = c(0, 2 * pi), grid_size = 1000, fev = FALSE, ...)  # S3 method for class 'fevdvar' fevdfd(var, freqs = c(0, 2 * pi), grid_size = 1000, fev = FALSE, ...)"},{"path":"https://vfci.github.io/fevdid/reference/fevdfd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate either the forecast error variance or fevd (default) in the frequency domain. — fevdfd","text":"var VAR. Currently supports either 'svars' 'fevdvar' object. ... currently used. freqs vector length 2 min max frequencies (0:2pi) grid_size fine grid approximate frequency domain fev Boolean true return fev fevd","code":""},{"path":"https://vfci.github.io/fevdid/reference/fevdfd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate either the forecast error variance or fevd (default) in the frequency domain. — fevdfd","text":"List forecast error variance decomposition frequency domain List variables, dataframe shocks, column 'f' frequencies.","code":""},{"path":"https://vfci.github.io/fevdid/reference/fevdfd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate either the forecast error variance or fevd (default) in the frequency domain. — fevdfd","text":"","code":"x <- svars::USA v <- vars::VAR(x, p = 2) sv <- svars::id.chol(v) fevd <- fevdfd(sv)"},{"path":"https://vfci.github.io/fevdid/reference/fevfd.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for fevdfd that defaults to fev = TRUE. — fevfd","title":"Wrapper for fevdfd that defaults to fev = TRUE. — fevfd","text":"Wrapper fevdfd defaults fev = TRUE.","code":""},{"path":"https://vfci.github.io/fevdid/reference/fevfd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for fevdfd that defaults to fev = TRUE. — fevfd","text":"","code":"fevfd(var, freqs = c(0, 2 * pi), grid_size = 1000, fev = TRUE, ...)"},{"path":"https://vfci.github.io/fevdid/reference/fevfd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for fevdfd that defaults to fev = TRUE. — fevfd","text":"var VAR. Currently supports either 'svars' 'fevdvar' object. freqs vector length 2 min max frequencies (0:2pi) grid_size fine grid approximate frequency domain fev Boolean true return fev fevd ... currently used.","code":""},{"path":"https://vfci.github.io/fevdid/reference/forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the forecasts for a VAR out to a specified horizon Conditions on information at time ","title":"Calculate the forecasts for a VAR out to a specified horizon Conditions on information at time ","text":"Calculate forecasts VAR specified horizon Conditions information time \"t\"","code":""},{"path":"https://vfci.github.io/fevdid/reference/forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the forecasts for a VAR out to a specified horizon Conditions on information at time ","text":"","code":"forecast(var, horizon = 1)"},{"path":"https://vfci.github.io/fevdid/reference/forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the forecasts for a VAR out to a specified horizon Conditions on information at time ","text":"var vars::VAR svars object horizon number steps calculate forecast","code":""},{"path":"https://vfci.github.io/fevdid/reference/forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the forecasts for a VAR out to a specified horizon Conditions on information at time ","text":"forecast","code":""},{"path":"https://vfci.github.io/fevdid/reference/forecast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the forecasts for a VAR out to a specified horizon Conditions on information at time ","text":"","code":"x <- svars::USA v <- vars::VAR(x, p = 2) forecast(v, 10) #>                  x       pi         i #>   [1,]          NA       NA        NA #>   [2,]          NA       NA        NA #>   [3,]          NA       NA        NA #>   [4,]          NA       NA        NA #>   [5,]          NA       NA        NA #>   [6,]          NA       NA        NA #>   [7,]          NA       NA        NA #>   [8,]          NA       NA        NA #>   [9,]          NA       NA        NA #>  [10,]          NA       NA        NA #>  [11,]          NA       NA        NA #>  [12,]  1.41039689 4.038803  5.510138 #>  [13,]  1.62717789 4.182735  5.634644 #>  [14,]  1.60712751 4.925727  6.458551 #>  [15,]  1.65911647 5.342172  6.945378 #>  [16,]  1.42745525 5.336419  6.881628 #>  [17,]  0.96680536 5.495716  7.292802 #>  [18,]  0.92760553 5.247775  7.065628 #>  [19,]  1.58478954 4.483222  5.933315 #>  [20,]  1.80326189 4.261544  5.455047 #>  [21,]  1.29354490 5.040519  6.525950 #>  [22,]  0.85668056 5.397753  7.099772 #>  [23,]  0.67077699 5.700933  7.665663 #>  [24,]  0.42902057 5.683484  7.849866 #>  [25,]  0.59313860 5.326056  7.291113 #>  [26,]  0.16969638 5.806381  7.911956 #>  [27,]  0.10476651 5.551758  7.865507 #>  [28,] -0.68038564 5.459146  8.151410 #>  [29,] -1.12072349 5.452480  8.356867 #>  [30,] -1.21444119 4.869074  7.665033 #>  [31,] -1.37197315 4.721323  7.532785 #>  [32,] -1.32442924 4.623351  7.362805 #>  [33,] -0.47398893 3.846407  6.177501 #>  [34,] -0.55234872 3.993667  6.064405 #>  [35,] -0.19995310 5.227535  7.355187 #>  [36,] -0.36273219 5.071207  7.242681 #>  [37,] -0.39071880 4.407092  6.674265 #>  [38,]  0.12983237 3.756194  5.632443 #>  [39,]  0.10509193 5.180427  7.102875 #>  [40,]  0.53564782 4.549533  6.512316 #>  [41,]  0.57271097 4.544207  6.388941 #>  [42,]  0.16041919 5.367710  7.501263 #>  [43,] -0.13586046 5.691310  8.199136 #>  [44,] -0.68297296 6.060500  8.789527 #>  [45,] -2.31333899 6.223269  9.727404 #>  [46,] -2.24565683 6.241907  9.678225 #>  [47,] -2.17643401 5.723652  8.889058 #>  [48,] -3.58013404 6.327063 10.384812 #>  [49,] -4.70887935 6.624542 11.039837 #>  [50,] -4.10412691 6.559837 10.408433 #>  [51,] -2.83580143 5.294286  8.250887 #>  [52,] -1.93807923 4.142156  6.873425 #>  [53,] -2.16483491 4.558000  7.576245 #>  [54,] -1.69475306 4.563109  7.272676 #>  [55,] -0.72185353 4.021510  6.393445 #>  [56,] -0.56664920 3.741127  5.981401 #>  [57,] -0.83658446 4.039333  6.362036 #>  [58,] -1.19189326 4.902403  7.350974 #>  [59,] -1.11936304 5.004946  7.463315 #>  [60,] -0.94147464 4.922048  7.454249 #>  [61,] -0.76824210 4.716757  7.234260 #>  [62,] -1.78873520 5.778843  8.614740 #>  [63,] -1.72689812 4.883211  7.718941 #>  [64,] -1.66621260 5.879525  9.074356 #>  [65,] -1.72447487 5.662974  8.738694 #>  [66,] -2.53097921 6.257872  9.843812 #>  [67,] -2.58069755 5.568256  9.076407 #>  [68,] -3.17564546 6.182945  9.908729 #>  [69,] -3.51336005 5.967488  9.975177 #>  [70,] -4.36682243 5.340952  9.915070 #>  [71,] -4.90903242 4.999306  9.866281 #>  [72,] -4.36437310 4.372915  8.447218 #>  [73,] -3.77908499 4.772146  8.507824 #>  [74,] -6.65653844 6.156640 12.064277 #>  [75,] -6.24084233 5.623895 11.282949 #>  [76,] -6.10746424 4.017803  9.458995 #>  [77,] -5.71617377 3.643812  8.999749 #>  [78,] -4.36475551 3.314654  7.435249 #>  [79,] -4.90799439 2.404755  6.853656 #>  [80,] -4.86876980 1.793585  6.389280 #>  [81,] -3.74565514 1.802870  5.425482 #>  [82,] -3.23165004 1.667213  5.032864 #>  [83,] -2.69096316 1.431484  4.667040 #>  [84,] -2.34423276 1.588801  4.831137 #>  [85,] -2.59233937 2.383930  5.806554 #>  [86,] -2.15274438 2.332759  5.594221 #>  [87,] -2.17753748 3.020955  6.345420 #>  [88,] -2.21981321 3.021105  6.463881 #>  [89,] -2.30618594 2.800651  6.278942 #>  [90,] -1.27817405 2.511250  5.277268 #>  [91,] -1.41490070 3.495301  6.327729 #>  [92,] -0.93477902 3.002188  5.602179 #>  [93,] -0.66050895 2.970204  5.530839 #>  [94,] -0.68714217 2.907957  5.436390 #>  [95,] -0.49330848 2.772890  5.198310 #>  [96,] -0.09004280 2.541715  4.658095 #>  [97,]  0.15763835 2.675382  4.688745 #>  [98,] -0.05903980 2.897393  4.988784 #>  [99,] -0.26661149 3.188846  5.375084 #> [100,] -0.42103100 3.258879  5.604802 #> [101,] -0.46454795 3.292991  5.648546 #> [102,] -0.47469053 3.682281  6.127782 #> [103,] -0.32827241 3.581762  5.846505 #> [104,] -0.62794476 4.015775  6.545700 #> [105,] -1.14500185 4.286454  7.047425 #> [106,] -0.99720061 3.846806  6.645781 #> [107,] -1.40421497 4.124616  7.159773 #> [108,] -1.48916059 4.040220  7.096679 #> [109,] -0.93718200 3.512003  6.248785 #> [110,] -0.72958305 3.268862  5.827344 #> [111,] -0.93740604 4.047247  6.751221 #> [112,] -1.04805060 4.054672  6.760571 #> [113,] -0.99189532 3.617802  6.241431 #> [114,] -0.92159493 2.936789  5.370381 #> [115,] -0.84657123 3.017075  5.285698 #> [116,] -0.59563432 2.841957  5.094682 #> [117,] -0.49745875 2.792659  4.966229 #> [118,] -0.08883037 2.494185  4.403752 #> [119,]  0.37918772 2.493591  4.216507 #> [120,]  0.38904637 2.964482  4.689132 #> [121,]  0.70782398 2.916408  4.461431 #> [122,]  0.71313744 3.296187  4.841794 #> [123,]  0.68054818 3.091928  4.583133 #> [124,]  0.64347740 3.080017  4.608162 #> [125,]  0.56952176 3.029433  4.582058 #> [126,]  0.72696403 3.066679  4.625438 #> [127,]  0.76903622 3.042778  4.588960 #> [128,]  0.59103845 3.179810  4.920335 #> [129,]  0.40482207 3.109745  4.898407 #> [130,]  0.18291680 3.178382  5.168995 #> [131,] -0.07409866 3.009599  5.080154 #> [132,] -0.09939938 2.632070  4.701006 #> [133,] -0.00425289 2.642955  4.679000 #> [134,] -0.01080821 2.695332  4.720617 #> [135,]  0.06363894 2.758549  4.707904 #> [136,]  0.31658141 2.842877  4.797288 #> [137,]  0.50320656 2.661045  4.485506 #> [138,]  0.40931309 3.023239  4.897502 #> [139,]  0.25504229 3.281661  5.202495 #> [140,]  0.49157315 2.983980  4.909332 #> [141,]  0.65296928 3.053382  4.890853 #> [142,]  0.68229310 3.028308  4.811884 #> [143,]  0.83654571 2.806807  4.545969 #> [144,]  0.88754599 2.835447  4.548472 #> [145,]  0.78993260 3.227268  5.025322 #> [146,]  1.18527926 3.416657  5.024116 #> [147,]  1.21357635 3.609896  5.162008 #> [148,]  1.22557311 3.549260  5.096555 #> [149,]  1.13131351 3.673200  5.339676 #> [150,]  1.11052724 4.011103  5.758143 #> [151,]  0.69033841 4.296230  6.126798 #> [152,]  0.61076425 4.356361  6.426773 #> [153,]  0.51531447 4.100012  6.054298 #> [154,]  0.50603879 3.847065  5.812156 #> [155,]  0.62780284 3.653202  5.372263 #> [156,]  0.86644079 3.815736  5.384136 #> [157,]  1.22793736 3.120135  4.392192 #> [158,]  1.69807084 2.885358  3.858022 #> [159,]  1.74189385 3.090282  4.108755 #> [160,]  1.62238896 3.157408  4.204741 #> [161,]  1.48505775 3.193187  4.284314 #> [162,]  1.37936061 3.176443  4.227517 #> [163,]  1.25756643 3.296335  4.420611 #> [164,]  1.48453444 2.930587  4.009208 #> [165,]  1.60365055 3.457508  4.543154 #> [166,]  1.69667530 3.605349  4.635515 #> [167,]  1.44498144 4.118379  5.215692 #> [168,]  1.36103328 4.268154  5.428243 #> [169,]  1.40364563 4.032583  5.236962 #> [170,]  1.26854477 4.080741  5.385562 #> [171,]  0.99508295 4.458709  5.952264 #> [172,]  0.98193616 4.127458  5.618516 #> [173,]  0.68039999 4.436247  6.118397 #> [174,]  0.57472892 4.195587  5.943269 #> [175,]  0.55449855 4.202967  6.057362 #> [176,]  0.38508936 4.105239  5.984115 #> [177,]  0.27252278 3.747227  5.662149 #> [178,]  0.59183536 3.195138  5.018153 #> [179,]  0.01442462 4.074719  6.067328 #> [180,]  0.20824944 3.591892  5.572568 #> [181,]  0.65668767 3.048308  4.803605 #> [182,]  0.83825938 3.074218  4.663823 #> [183,]  1.03112823 3.040037  4.311489 #> [184,]  1.31121898 3.149579  4.325017 #> [185,]  1.03940751 3.264132  4.471843"},{"path":"https://vfci.github.io/fevdid/reference/hd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the historical decomposition for a VAR. — hd","title":"Calculate the historical decomposition for a VAR. — hd","text":"Calculate historical decomposition VAR. Method calculate hd svars (id.chol)","code":""},{"path":"https://vfci.github.io/fevdid/reference/hd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the historical decomposition for a VAR. — hd","text":"","code":"hd(x, ...)  # S3 method for class 'svars' hd(x, ...)"},{"path":"https://vfci.github.io/fevdid/reference/hd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the historical decomposition for a VAR. — hd","text":"x VAR. Currently supports either 'svars' 'fevdvar' object. ... currently used.","code":""},{"path":"https://vfci.github.io/fevdid/reference/hd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the historical decomposition for a VAR. — hd","text":"Class 'fevdhd' list historical decomposition data.frame.","code":""},{"path":"https://vfci.github.io/fevdid/reference/hd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the historical decomposition for a VAR. — hd","text":"","code":"x <- svars::USA v <- vars::VAR(x, p = 2) sv <- svars::id.chol(v) hd <- hd(sv)"},{"path":"https://vfci.github.io/fevdid/reference/hist_shocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the historical shocks for a VAR — hist_shocks","title":"Find the historical shocks for a VAR — hist_shocks","text":"Find historical shocks VAR","code":""},{"path":"https://vfci.github.io/fevdid/reference/hist_shocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the historical shocks for a VAR — hist_shocks","text":"","code":"hist_shocks(residuals, sigma)"},{"path":"https://vfci.github.io/fevdid/reference/hist_shocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the historical shocks for a VAR — hist_shocks","text":"residuals Matrix empirical VAR residuals sigma Matrix mapping empirical residuals structural","code":""},{"path":"https://vfci.github.io/fevdid/reference/hist_shocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the historical shocks for a VAR — hist_shocks","text":"historical shocks, matrix","code":""},{"path":"https://vfci.github.io/fevdid/reference/hs.html","id":null,"dir":"Reference","previous_headings":"","what":"Method to calculate fevdfd for fevdvar (id_fevdfd or id_fevdtd) — hs","title":"Method to calculate fevdfd for fevdvar (id_fevdfd or id_fevdtd) — hs","text":"Method calculate fevdfd fevdvar (id_fevdfd id_fevdtd) Calculate historical structural shocks VAR. Method calculate hs svars (id.chol) Method calculate hs fevdvar (id_fevdfd id_fevdtd)","code":""},{"path":"https://vfci.github.io/fevdid/reference/hs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method to calculate fevdfd for fevdvar (id_fevdfd or id_fevdtd) — hs","text":"","code":"# S3 method for class 'fevdvar' hd(x, ...)  hs(x, ...)  # S3 method for class 'svars' hs(x, cumulative = FALSE, ...)  # S3 method for class 'fevdvar' hs(x, cumulative = FALSE, ...)"},{"path":"https://vfci.github.io/fevdid/reference/hs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method to calculate fevdfd for fevdvar (id_fevdfd or id_fevdtd) — hs","text":"x VAR. Currently supports either 'svars' 'fevdvar' object. ... currently used. cumulative Boolean. Default False, set True cummulative shocks.","code":""},{"path":"https://vfci.github.io/fevdid/reference/hs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Method to calculate fevdfd for fevdvar (id_fevdfd or id_fevdtd) — hs","text":"Class 'fevdhs' list historical shocks data.frame.","code":""},{"path":"https://vfci.github.io/fevdid/reference/hs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Method to calculate fevdfd for fevdvar (id_fevdfd or id_fevdtd) — hs","text":"","code":"x <- svars::USA v <- vars::VAR(x, p = 2) sv <- svars::id.chol(v) hs <- hs(sv)"},{"path":"https://vfci.github.io/fevdid/reference/id_fevdfd.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify the main shock by targetting the forecast error variance contribution in the frequency domain. — id_fevdfd","title":"Identify the main shock by targetting the forecast error variance contribution in the frequency domain. — id_fevdfd","text":"Identify main shock targetting forecast error variance contribution frequency domain.","code":""},{"path":"https://vfci.github.io/fevdid/reference/id_fevdfd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify the main shock by targetting the forecast error variance contribution in the frequency domain. — id_fevdfd","text":"","code":"id_fevdfd(   x,   target,   freqs = c(0, 2 * pi),   grid_size = 1000,   freq_grid = NULL,   sign = \"positive\",   sign_horizon = 1 )  # S3 method for class 'varest' id_fevdfd(   x,   target,   freqs = c(0, 2 * pi),   grid_size = 1000,   freq_grid = NULL,   sign = \"positive\",   sign_horizon = 1 )  # S3 method for class 'varboot' id_fevdfd(   x,   target,   freqs = c(0, 2 * pi),   grid_size = 1000,   freq_grid = NULL,   sign = \"positive\",   sign_horizon = 1 )  # S3 method for class 'bvartools' id_fevdfd(   x,   target,   freqs = c(0, 2 * pi),   grid_size = 1000,   freq_grid = NULL,   sign = \"positive\",   sign_horizon = 1 )  # S3 method for class 'bvar' id_fevdfd(   x,   target,   freqs = c(0, 2 * pi),   grid_size = 1000,   freq_grid = NULL,   sign = \"positive\",   sign_horizon = 1 )"},{"path":"https://vfci.github.io/fevdid/reference/id_fevdfd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify the main shock by targetting the forecast error variance contribution in the frequency domain. — id_fevdfd","text":"x either vars::VARS BVAR::bvar object target, variable name index maximize fev freqs vector length 2 min max frequencies (0:2pi) grid_size fine grid approximate frequency domain freq_grid Default NULL. Pass vector frequencies c(0,2pi) target specific frequencies.  Overides freqs grid_size arguments. sign Default \"positive\". Can \"negative\".  Ensures cummulative impact main shock target variable given sign. sign_horizon Default 1. horizon accumulate impact shock.","code":""},{"path":"https://vfci.github.io/fevdid/reference/id_fevdfd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify the main shock by targetting the forecast error variance contribution in the frequency domain. — id_fevdfd","text":"structural var","code":""},{"path":"https://vfci.github.io/fevdid/reference/id_fevdfd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify the main shock by targetting the forecast error variance contribution in the frequency domain. — id_fevdfd","text":"","code":"x <- svars::USA v <- vars::VAR(x, p = 2) mvar <- id_fevdfd(v, \"pi\", c(2 * pi / 32, 2 * pi / 6))"},{"path":"https://vfci.github.io/fevdid/reference/id_fevdfd_findq.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the rotation matrix Q that maximizes fevd over the given frequencies for the target variable. — id_fevdfd_findq","title":"Find the rotation matrix Q that maximizes fevd over the given frequencies for the target variable. — id_fevdfd_findq","text":"Find rotation matrix Q maximizes fevd given frequencies target variable.","code":""},{"path":"https://vfci.github.io/fevdid/reference/id_fevdfd_findq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the rotation matrix Q that maximizes fevd over the given frequencies for the target variable. — id_fevdfd_findq","text":"","code":"id_fevdfd_findq(betas, sigma, target_index, freqs, grid_size, freq_grid = NULL)"},{"path":"https://vfci.github.io/fevdid/reference/id_fevdfd_findq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the rotation matrix Q that maximizes fevd over the given frequencies for the target variable. — id_fevdfd_findq","text":"betas matrix coeffecients VAR sigma variance-covariance matrix VAR target_index index variable target freqs vector length 2 min max frequencies (0:pi) grid_size fine grid approximate frequency domain freq_grid Default NULL. Pass vector frequencies c(0,2pi) target specific frequencies.  Overides freqs grid_size arguments.","code":""},{"path":"https://vfci.github.io/fevdid/reference/id_fevdfd_findq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the rotation matrix Q that maximizes fevd over the given frequencies for the target variable. — id_fevdfd_findq","text":"matrix q","code":""},{"path":"https://vfci.github.io/fevdid/reference/id_fevdtd.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify the main shock by targetting the forecast error variance contribution in the time domain. — id_fevdtd","title":"Identify the main shock by targetting the forecast error variance contribution in the time domain. — id_fevdtd","text":"Identify main shock targetting forecast error variance contribution time domain.","code":""},{"path":"https://vfci.github.io/fevdid/reference/id_fevdtd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify the main shock by targetting the forecast error variance contribution in the time domain. — id_fevdtd","text":"","code":"id_fevdtd(x, target, horizon, sign = \"positive\", sign_horizon = 1)  # S3 method for class 'varest' id_fevdtd(x, target, horizon, sign = \"positive\", sign_horizon = 1)  # S3 method for class 'varboot' id_fevdtd(x, target, horizon, sign = \"positive\", sign_horizon = 1)  # S3 method for class 'bvartools' id_fevdtd(x, target, horizon, sign = \"positive\", sign_horizon = 1)  # S3 method for class 'bvar' id_fevdtd(x, target, horizon, sign = \"positive\", sign_horizon = 1)"},{"path":"https://vfci.github.io/fevdid/reference/id_fevdtd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify the main shock by targetting the forecast error variance contribution in the time domain. — id_fevdtd","text":"x vars::VAR object target variable name index maximize fevd horizon integer vector (can length 1) horizon maximize sign Default \"positive\". Can \"negative\".  Ensures cummulative impact main shock target variable given sign. sign_horizon Default 1. horizon accumulate impact shock.","code":""},{"path":"https://vfci.github.io/fevdid/reference/id_fevdtd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify the main shock by targetting the forecast error variance contribution in the time domain. — id_fevdtd","text":"structural var","code":""},{"path":"https://vfci.github.io/fevdid/reference/id_fevdtd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify the main shock by targetting the forecast error variance contribution in the time domain. — id_fevdtd","text":"","code":"x <- svars::USA v <- vars::VAR(x, p = 2) mvar <- id_fevdtd(v, \"pi\", 4:10)"},{"path":"https://vfci.github.io/fevdid/reference/id_fevdtd_findq.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the rotation matrix Q that maximizes fevd over the given frequencies for the target variable. — id_fevdtd_findq","title":"Find the rotation matrix Q that maximizes fevd over the given frequencies for the target variable. — id_fevdtd_findq","text":"Find rotation matrix Q maximizes fevd given frequencies target variable.","code":""},{"path":"https://vfci.github.io/fevdid/reference/id_fevdtd_findq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the rotation matrix Q that maximizes fevd over the given frequencies for the target variable. — id_fevdtd_findq","text":"","code":"id_fevdtd_findq(betas, sigma, target_index, horizon)"},{"path":"https://vfci.github.io/fevdid/reference/id_fevdtd_findq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the rotation matrix Q that maximizes fevd over the given frequencies for the target variable. — id_fevdtd_findq","text":"betas matrix coeffecients VAR sigma variance-covariance matrix VAR target_index index variable target horizon integer vector (can length 1) horizon maximize","code":""},{"path":"https://vfci.github.io/fevdid/reference/id_fevdtd_findq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the rotation matrix Q that maximizes fevd over the given frequencies for the target variable. — id_fevdtd_findq","text":"matrix q","code":""},{"path":"https://vfci.github.io/fevdid/reference/id_ordered_chol.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify a VAR with a Cholesky ordering assumption. Assumes the given order of the variables in the VAR, reorder the data first to get a different ordering. — id_ordered_chol","title":"Identify a VAR with a Cholesky ordering assumption. Assumes the given order of the variables in the VAR, reorder the data first to get a different ordering. — id_ordered_chol","text":"Identify VAR Cholesky ordering assumption. Assumes given order variables VAR, reorder data first get different ordering.","code":""},{"path":"https://vfci.github.io/fevdid/reference/id_ordered_chol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify a VAR with a Cholesky ordering assumption. Assumes the given order of the variables in the VAR, reorder the data first to get a different ordering. — id_ordered_chol","text":"","code":"id_ordered_chol(x)"},{"path":"https://vfci.github.io/fevdid/reference/id_ordered_chol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify a VAR with a Cholesky ordering assumption. Assumes the given order of the variables in the VAR, reorder the data first to get a different ordering. — id_ordered_chol","text":"x vars::VAR","code":""},{"path":"https://vfci.github.io/fevdid/reference/id_ordered_chol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify a VAR with a Cholesky ordering assumption. Assumes the given order of the variables in the VAR, reorder the data first to get a different ordering. — id_ordered_chol","text":"SVAR cholesky id","code":""},{"path":"https://vfci.github.io/fevdid/reference/irf.html","id":null,"dir":"Reference","previous_headings":"","what":"Impulse Responses. — irf","title":"Impulse Responses. — irf","text":"Alias function svars::irf.svars, shock names correct.","code":""},{"path":"https://vfci.github.io/fevdid/reference/irf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impulse Responses. — irf","text":"","code":"# S3 method for class 'fevdvar' irf(   x,   impulse = NULL,   response = NULL,   n.ahead = 10,   ortho = TRUE,   cumulative = FALSE,   boot = TRUE,   ci = 0.95,   runs = 100,   seed = NULL,   as_matrix = FALSE,   ... )  # S3 method for class 'bvartools' irf(   x,   impulse = NULL,   response = NULL,   n.ahead = 10,   ortho = TRUE,   cumulative = FALSE,   boot = TRUE,   ci = 0.95,   runs = 100,   seed = NULL,   ... )"},{"path":"https://vfci.github.io/fevdid/reference/irf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impulse Responses. — irf","text":"x SVAR object class \"fevdvar\". impulse character vector impulses, default variables. response character vector responses, default variables. n.ahead Integer specifying steps. ortho used. match generic vars::irf. cumulative used. match generic vars::irf. boot used. match generic vars::irf. ci used. match generic vars::irf. runs used. match generic vars::irf. seed used. match generic vars::irf. as_matrix Default False. Set true return 3D matrix instead data.frame. ... Currently used.","code":""},{"path":"https://vfci.github.io/fevdid/reference/irf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impulse Responses. — irf","text":"Matrix forecast error variance decomposition frequency domain Indexed: frequencies, variables, shocks","code":""},{"path":"https://vfci.github.io/fevdid/reference/irf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impulse Responses. — irf","text":"","code":"x <- svars::USA v <- vars::VAR(x, p = 2) mvar <- id_fevdtd(v, \"pi\", 4:10) vars::irf(mvar) #> $irf #>     h impulse response          irf #> 1   1    Main        x  0.067787261 #> 2   1    Main       pi  1.064167220 #> 3   1    Main        i  0.272985376 #> 4   1  Orth_2        x  0.712912349 #> 5   1  Orth_2       pi -0.183426009 #> 6   1  Orth_2        i  0.348084767 #> 7   1  Orth_3        x  0.088275371 #> 8   1  Orth_3       pi  0.111448857 #> 9   1  Orth_3        i -0.805142889 #> 10  2    Main        x  0.099624559 #> 11  2    Main       pi  0.715310130 #> 12  2    Main        i  0.371566912 #> 13  2  Orth_2        x  0.808657657 #> 14  2  Orth_2       pi -0.077576485 #> 15  2  Orth_2        i  0.626426159 #> 16  2  Orth_3        x  0.044770396 #> 17  2  Orth_3       pi -0.092187863 #> 18  2  Orth_3        i -0.794788673 #> 19  3    Main        x  0.068895477 #> 20  3    Main       pi  0.758830339 #> 21  3    Main        i  0.491118102 #> 22  3  Orth_2        x  0.742597957 #> 23  3  Orth_2       pi  0.005724510 #> 24  3  Orth_2        i  0.659607290 #> 25  3  Orth_3        x  0.092826448 #> 26  3  Orth_3       pi -0.031024691 #> 27  3  Orth_3        i -0.726050307 #> 28  4    Main        x  0.028155426 #> 29  4    Main       pi  0.703114881 #> 30  4    Main        i  0.554410409 #> 31  4  Orth_2        x  0.611256994 #> 32  4  Orth_2       pi  0.056005124 #> 33  4  Orth_2        i  0.612648879 #> 34  4  Orth_3        x  0.161344352 #> 35  4  Orth_3       pi -0.042662458 #> 36  4  Orth_3        i -0.635548847 #> 37  5    Main        x -0.024735313 #> 38  5    Main       pi  0.669283235 #> 39  5    Main        i  0.598832154 #> 40  5  Orth_2        x  0.470687648 #> 41  5  Orth_2       pi  0.093036484 #> 42  5  Orth_2        i  0.540241779 #> 43  5  Orth_3        x  0.222298650 #> 44  5  Orth_3       pi -0.025868304 #> 45  5  Orth_3        i -0.536156578 #> 46  6    Main        x -0.080412175 #> 47  6    Main       pi  0.628381133 #> 48  6    Main        i  0.623226723 #> 49  6  Orth_2        x  0.343408691 #> 50  6  Orth_2       pi  0.115580811 #> 51  6  Orth_2        i  0.466939339 #> 52  6  Orth_3        x  0.269585303 #> 53  6  Orth_3       pi -0.010405058 #> 54  6  Orth_3        i -0.444305757 #> 55  7    Main        x -0.135717174 #> 56  7    Main       pi  0.587175705 #> 57  7    Main        i  0.633654075 #> 58  7  Orth_2        x  0.236391029 #> 59  7  Orth_2       pi  0.128328241 #> 60  7  Orth_2        i  0.402430235 #> 61  7  Orth_3        x  0.301062110 #> 62  7  Orth_3       pi  0.008532501 #> 63  7  Orth_3        i -0.362056711 #> 64  8    Main        x -0.187973205 #> 65  8    Main       pi  0.544426035 #> 66  8    Main        i  0.632754410 #> 67  8  Orth_2        x  0.149940594 #> 68  8  Orth_2       pi  0.133535680 #> 69  8  Orth_2        i  0.348852398 #> 70  8  Orth_3        x  0.318339266 #> 71  8  Orth_3       pi  0.027944614 #> 72  8  Orth_3        i -0.290225971 #> 73  9    Main        x -0.235678404 #> 74  9    Main       pi  0.500828421 #> 75  9    Main        i  0.622905312 #> 76  9  Orth_2        x  0.081673205 #> 77  9  Orth_2       pi  0.133300686 #> 78  9  Orth_2        i  0.305427595 #> 79  9  Orth_3        x  0.323772055 #> 80  9  Orth_3       pi  0.047148780 #> 81  9  Orth_3        i -0.227842236 #> 82 10    Main        x -0.277913586 #> 83 10    Main       pi  0.456705816 #> 84 10    Main        i  0.605852010 #> 85 10  Orth_2        x  0.028512851 #> 86 10  Orth_2       pi  0.129139282 #> 87 10  Orth_2        i  0.270339476 #> 88 10  Orth_3        x  0.319861737 #> 89 10  Orth_3       pi  0.065326409 #> 90 10  Orth_3        i -0.173692001 #>  #> attr(,\"class\") #> [1] \"fevdirf\""},{"path":"https://vfci.github.io/fevdid/reference/irf_ssv.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple IRF function for statespace VARs — irf_ssv","title":"Simple IRF function for statespace VARs — irf_ssv","text":"Simple IRF function statespace VARs","code":""},{"path":"https://vfci.github.io/fevdid/reference/irf_ssv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple IRF function for statespace VARs — irf_ssv","text":"","code":"irf_ssv(ssv, n_ahead = 10)"},{"path":"https://vfci.github.io/fevdid/reference/irf_ssv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple IRF function for statespace VARs — irf_ssv","text":"ssv Statespace VAR class. n_ahead integer. far calculate impulse response.","code":""},{"path":"https://vfci.github.io/fevdid/reference/irf_ssv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple IRF function for statespace VARs — irf_ssv","text":"array irfs, dimensions = c(response, shock, horizon)","code":""},{"path":"https://vfci.github.io/fevdid/reference/irffd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate either the IRF in the frequency domain. — irffd","title":"Calculate either the IRF in the frequency domain. — irffd","text":"Calculate either IRF frequency domain. Method calculate irffd fevdvar (package) Method calculate irffd svars (id.chol)","code":""},{"path":"https://vfci.github.io/fevdid/reference/irffd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate either the IRF in the frequency domain. — irffd","text":"","code":"irffd(var, ...)  # S3 method for class 'fevdvar' irffd(var, freqs = c(0, 2 * pi), grid_size = 1000, ...)  # S3 method for class 'svars' irffd(var, freqs = c(0, 2 * pi), grid_size = 1000, ...)"},{"path":"https://vfci.github.io/fevdid/reference/irffd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate either the IRF in the frequency domain. — irffd","text":"var VAR. Currently supports either 'svars' 'fevdvar' object. ... currently used. freqs vector length 2 min max frequencies (0:2pi) grid_size fine grid approximate frequency domain","code":""},{"path":"https://vfci.github.io/fevdid/reference/irffd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate either the IRF in the frequency domain. — irffd","text":"irffd object, storing data.frame","code":""},{"path":"https://vfci.github.io/fevdid/reference/irffd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate either the IRF in the frequency domain. — irffd","text":"","code":"x <- svars::USA v <- vars::VAR(x, p = 2) sv <- svars::id.chol(v) irffd <- irffd(sv)"},{"path":"https://vfci.github.io/fevdid/reference/irffd_generic.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the IRF in FD for a VAR — irffd_generic","title":"Find the IRF in FD for a VAR — irffd_generic","text":"Find IRF FD VAR","code":""},{"path":"https://vfci.github.io/fevdid/reference/irffd_generic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the IRF in FD for a VAR — irffd_generic","text":"","code":"irffd_generic(var, freqs = c(0, 2 * pi), grid_size = 1000)"},{"path":"https://vfci.github.io/fevdid/reference/irffd_generic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the IRF in FD for a VAR — irffd_generic","text":"var VAR. Currently supports either 'svars' 'fevdvar' object. freqs vector length 2 min max frequencies (0:2pi) grid_size fine grid approximate frequency domain","code":""},{"path":"https://vfci.github.io/fevdid/reference/irffd_generic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the IRF in FD for a VAR — irffd_generic","text":"list vector frequencies matrix irf values","code":""},{"path":"https://vfci.github.io/fevdid/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the IRF in frequency domain. — plot","title":"Plot the IRF in frequency domain. — plot","text":"Alias function plot frequency domain. Alias function plot frequency domain. Alias function plot frequency domain.","code":""},{"path":"https://vfci.github.io/fevdid/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the IRF in frequency domain. — plot","text":"","code":"# S3 method for class 'irffd' plot(x, y, vlines = NULL, ...)  # S3 method for class 'fevdfd' plot(x, y, stacked = TRUE, vlines = NULL, ...)  # S3 method for class 'fevfd' plot(x, y, stacked = TRUE, vlines = NULL, ...)  # S3 method for class 'fevdfevd' plot(x, y, stacked = TRUE, vlines = NULL, ...)  # S3 method for class 'fevdirf' plot(x, y = NULL, impulse_as = \"colors\", ...)  # S3 method for class 'fevdfev' plot(x, y = NULL, impulse_as = \"colors\", ...)  # S3 method for class 'fevdhs' plot(x, y = NULL, impulse_as = \"colors\", ...)  # S3 method for class 'fevdhd' plot(x, y = NULL, ...)"},{"path":"https://vfci.github.io/fevdid/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the IRF in frequency domain. — plot","text":"x object class \"fevdhd\" y used. vlines Vector x-axis points draw vline. Useful highlighting areas. ... Currently used. stacked Boolean. True stacked columns, False (default) unstacked line chart. impulse_as Default \"colors\", shocks facet. option \"cols\" puts shock column facet.","code":""},{"path":"https://vfci.github.io/fevdid/reference/plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the IRF in frequency domain. — plot","text":"ggplot irffd ggplot fevdfd ggplot fevfd ggplot fevd ggplot irf ggplot fevdfev ggplot hs ggplot hd","code":""}]
